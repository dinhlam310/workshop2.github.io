[
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/1-introduce/1.1-setup/1.1.1-awsworkshopstudio/",
	"title": "AWS Workshop Studio",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Chúng tôi sẽ hướng dẫn từng bước để bắt đầu với môi trường AWS Workshop Studio. Nếu bạn tự thực hiện workshop này hoặc không được cung cấp tài khoản AWS, vui lòng làm theo hướng dẫn Self-Paced Workshop.\nĐối với các sự kiện sử dụng AWS Workshop Studio, bạn sẽ được cung cấp một mã \u0026ldquo;băm\u0026rdquo; gồm 12 ký tự mà bạn sẽ sử dụng để truy cập vào tài khoản AWS chuyên dụng cho mục đích của hội thảo này.\nCác bước Điều hướng đến AWS Workshop Studio và nhấp vào Get started. Nhấp vào Email one-time password (OTP) Nhập địa chỉ email của bạn và nhấp vào Send passcode Nhập mã truy cập bạn nhận được từ email bạn đã chỉ định ở bước trước Nhập Mã truy cập sự kiện do người hướng dẫn hội thảo cung cấp Chấp nhận Điều khoản và Điều kiện và nhấp vào Join event Trang đích của Hội thảo Sau khi bạn đã đăng nhập vào AWS Workshop Studio cho sự kiện cụ thể của bạn, bạn sẽ được tự động chuyển hướng đến trang đích chung cho workshop. Từ đây, bạn có thể xem lại tất cả các hướng dẫn workshop, truy cập tài khoản AWS được cung cấp cho bạn thông qua bảng điều khiển hoặc AWS CLI.\nNhấp vào Open AWS console trong menu bên trái bên dưới phần truy cập tài khoản AWS để truy cập tài khoản AWS được cung cấp cho bạn, bạn sẽ hoàn tất tất cả các hướng dẫn trong tài khoản này. Sau khi thiết lập Workshop Studio hoàn tất: Nhấp vào đây để chuyển đến phòng thí nghiệm đầu tiên. Nhấp vào Tiếp theo sẽ đưa bạn đến hướng dẫn thiết lập cho trải nghiệm Workshop cá nhân.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/2-datadiscovery/2.3-ohmzioquicksightdashboard/",
	"title": "Bảng điều khiển Ohmzio QuickSight",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong phần này, chúng tôi sẽ tạo một bản phân tích để phân tích các loại yêu cầu và vấn đề mà khách hàng nêu ra, có thể giúp xác định các lĩnh vực cần cải thiện trong sản phẩm và dịch vụ.\nCác bước Điều hướng đến trang QuickSight Datasets.\nNhấp vào nút menu dấu ba chấm ⋮ bên cạnh bộ dữ liệu customer_support_discovery, sau đó choose CREATE ANALYSIS.\nTrên cửa sổ bật lên New sheet, hãy để Interactive sheet được chọn và nhấp vào nút CREATE.\nChúng ta hãy bắt đầu bằng cách phân tích khối lượng phiếu hỗ trợ duy nhất nhận được hàng tháng.\nNhấp vào hình ảnh trống và thay đổi loại hình ảnh thành biểu đồ đường. Từ fields list trong primary left pane, kéo ticket_date vào trường X axis của hình ảnh trong right pane và ticket_id vào trường giá trị của hình ảnh.\nTheo mặc định, bạn sẽ thấy rằng ticket_date được tổng hợp theo ngày. Nhấp vào dấu ba chấm đối với trường ticket_date từ phần X AXIS của hình ảnh để truy cập menu trường cấp hình ảnh để thay đổi tổng hợp từ ngày sang tháng.\nNhấp vào dấu ba chấm đối với trường ticket_id từ phần VALUE của hình ảnh để truy cập menu trường cấp hình ảnh để thay đổi tổng hợp từ count thành count distinct để có số lượng vé duy nhất.\nPhân tích dữ liệu lịch sử cho thấy nhìn chung có xu hướng tăng về khối lượng phiếu trong nhiều tháng, cho thấy nhu cầu về dịch vụ hỗ trợ ngày càng tăng.\nTiếp theo, hãy xem phân phối các yêu cầu hỗ trợ trên nhiều loại sản phẩm khác nhau. Chọn Thêm trên thanh ứng dụng, sau đó chọn Thêm hình ảnh. Một hình ảnh mới, trống sẽ được tạo.\nNhấp vào hình ảnh trống và thay đổi loại hình ảnh thành Donut chart. Từ danh sách Trường trong ngăn bên trái chính, kéo category vào ô trường Group/Color và ticket_id vào ô trường Value.\nPhân tích cho thấy danh mục Lighting có khối lượng phiếu nhiều nhất.\nTiếp theo, hãy xem sản phẩm nào có nhiều phiếu hỗ trợ nhất. Chọn Thêm trên thanh ứng dụng, sau đó chọn Thêm hình ảnh. Một hình ảnh trực quan mới, trống được tạo và nhận được tiêu điểm.\nNhấp vào hình ảnh trực quan trống và thay đổi loại hình ảnh thành Tree Map.\nTừ danh sách Trường trong ngăn bên trái chính, kéo name[products] vào ô trường GROUP BY và ticket_id vào ô trường Color. Bạn có thể thấy name[customers] chứ không phải name[products]. Vì cả bảng customers và products đều có một cột có tiêu đề là \u0026ldquo;name\u0026rdquo;, Quicksight đổi tên một trong hai bảng. Đảm bảo bạn chọn name[products] hoặc chỉ name nếu bạn chỉ thấy name[customers]. Ký hiệu ngoặc vuông cho products cho biết thuộc tính bắt nguồn từ bảng products. Khi nối các bảng có cùng tên cột, QuickSight sẽ giải quyết vấn đề này bằng cách thêm tên bảng. Nếu bạn đã tham gia support_tickets với bảng products trước khi tham gia với bảng customers, tên cột của bạn sẽ khác.\nPhân tích cho thấy sản phẩm Ohmzio Smart Plug có khối lượng phiếu nhiều nhất.\nTiếp theo, hãy thêm thông tin chi tiết được đề xuất. Từ góc trên bên trái, chọn biểu tượng Insights (biểu tượng hình bóng đèn*). Bảng Thông tin chi tiết mở ra và hiển thị danh sách thông tin chi tiết được đề xuất đã sẵn sàng sử dụng. Cuộn xuống để xem trước thêm thông tin chi tiết.\nThêm thông tin chi tiết được đề xuất (chẳng hạn như Top 3 Products by Ticket Count) vào phân tích của bạn bằng cách chọn dấu cộng (+) gần tiêu đề thông tin chi tiết.\nBạn có thể thay đổi kích thước thông tin chi tiết để nhỏ hơn và di chuyển chúng lên trên hình ảnh Tree Map của bạn.\nThông tin chi tiết được tạo tự động cho thấy các sản phẩm Smart Plug và Smart Vent có khối lượng phiếu nhiều nhất.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/1-introduce/1.1-setup/",
	"title": "Cài đặt",
	"tags": [],
	"description": "",
	"content": "Trước khi bắt đầu, chúng ta cần thiết lập một số thứ trước. Chọn trải nghiệm thiết lập phù hợp:\nSử dụng tài khoản do aws cung cấp: Nếu bạn đang sử dụng Tài khoản AWS được cung cấp cho bạn thông qua AWS Workshop Studio, hãy sử dụng hướng dẫn AWS Workshop Studio. Xem lại hướng dẫn để đảm bảo tài khoản của bạn được thiết lập đúng cách cho phòng thí nghiệm.\nSử dụng tài khoản aws của chính bạn: Nếu bạn đang sử dụng tài khoản của riêng mình, hãy làm theo các bước được cung cấp trong hướng dẫn Self-Paced Workshop để thiết lập Tài khoản AWS của bạn một cách chính xác.\nNhấp vào tiếp theo sẽ đưa bạn đến hướng dẫn thiết lập AWS Workshop Studio cho các sự kiện do AWS tổ chức.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Hôm nay, chúng ta sẽ làm việc với dữ liệu mẫu từ hai tổ chức mô phỏng.\nOhmzio sản xuất các thiết bị nhà thông minh: các thiết bị kết nối Internet sáng tạo như bóng đèn thông minh, công tắc, ổ cắm và cảm biến để tự động hóa ngôi nhà.\nAmpwerks sản xuất phụ kiện xe điện - các thành phần EV chuyên dụng như nâng cấp pin, hệ thống sạc, cáp bộ chuyển đổi, bộ biến tần và mô-đun điều khiển để cải thiện hiệu suất của xe điện.\nThách thức kinh doanh Ohmzio, một công ty thiết bị nhà thông minh, đã mua lại Ampwerks, một nhà sản xuất phụ kiện xe điện và hiện cần tích hợp các sản phẩm, dữ liệu khách hàng và hệ thống hỗ trợ của Ampwerks vào cơ sở hạ tầng kinh doanh hiện có của họ để hỗ trợ và bán hiệu quả dòng sản phẩm Ampwerks mới mua lại. Điều này sẽ yêu cầu hợp nhất các cơ sở dữ liệu sản phẩm và khách hàng riêng biệt, xác định các cơ hội bán thêm trên toàn bộ danh mục sản phẩm kết hợp và thống nhất các hệ thống hỗ trợ của họ để cung cấp trải nghiệm khách hàng liền mạch cho cả khách hàng Ohmzio và Ampwerks. Việc tích hợp hiệu quả các hoạt động và dữ liệu sẽ rất quan trọng để hiện thực hóa các lợi ích tiềm năng của việc mua lại.\nMục tiêu Đảm bảo trải nghiệm khách hàng thú vị khi chúng tôi hoàn tất việc sáp nhập Tích hợp các hệ thống hỗ trợ Tạo cơ sở kiến ​​thức để các kỹ sư hỗ trợ cung cấp hỗ trợ khách hàng trên tất cả các sản phẩm Tận dụng AI tạo ra để tạo ra một chatbot chuyên gia để tư vấn cho các kỹ sư hỗ trợ của chúng tôi\nTổng quan về giải pháp Các bước đã hoàn thành Dữ liệu sản phẩm và trích xuất từ ​​cả hai hệ thống hỗ trợ đã được lưu trữ trong một S3 bucket. Các hướng dẫn sử dụng sản phẩm có sẵn dưới dạng tệp docx và các phiếu hỗ trợ đã được trích xuất dưới dạng tệp JSON.\nĐể tạo hồ sơ khách hàng hợp nhất, dữ liệu khách hàng và đơn hàng từ cả cơ sở dữ liệu Ohmzio và Amperwerks Aurora đã được trích xuất và lưu trữ trong Amazon S3. Amazon Entity Resolution được sử dụng để khớp khách hàng và chỉ định một mã định danh khách hàng toàn cầu mới.\nThông tin khách hàng, đơn hàng và hỗ trợ đã được hợp nhất đã được tải vào Amazon DynamoDB để truy xuất nhanh chóng.\nCác bước chúng tôi sẽ hoàn thành trong phòng thí nghiệm Kết nối QuickSight với cơ sở dữ liệu Ohmzio Aurora để hiểu rõ hơn về sản phẩm và sự cố hỗ trợ.\nSử dụng Amazon Bedrock để xây dựng Cơ sở tri thức chứa thông tin về sản phẩm và hỗ trợ. Bedrock triển khai Amazon OpenSearch Serverless và sử dụng các mô hình Amazon Titan để tạo nhúng vector của dữ liệu.\nAmazon Bedrock Agent được sử dụng để tương tác với cơ sở tri thức và thực thi các hàm lambda để truy xuất thông tin khách hàng bổ sung.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/4.1-createbedrockagent/",
	"title": "Khởi tạo Bedrock Agent",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong phần này, bạn sẽ thiết lập mục đích của tác nhân và chọn mô hình nền tảng phù hợp. Cơ sở kiến ​​thức sẽ được tích hợp để tăng cường khả năng tạo tác nhân, cho phép tác nhân sử dụng và tổng hợp thông tin từ thông tin sản phẩm và phiếu hỗ trợ khách hàng.\nCác bước Mở Amazon Bedrock console .\nChọn Agents từ ngăn điều hướng bên trái. It is under the Builder Tools section, just below Knowledge bases.\nTrong phần Agents, chọn Create Agent.\nTrên màn hình Create Agent, nhập tên và mô tả về tác nhân của bạn.\nTên: customer-support-agent Mô tả: AI agent để lấy thông tin khách hàng và lịch sử phiếu yêu cầu để hỗ trợ thêm cho các đại diện hỗ trợ giải quyết các vấn đề của khách hàng. Nhấp vào Create. Sau khi tạo agent, trình xây dựng Agent sẽ mở ra để cấu hình thêm. Trong phần Agent details, hãy hoàn thành các bước sau: Xác minh tên Agent và mô tả Agent mà bạn đã nhập trên màn hình trước đó.\nĐối với vai trò tài nguyên Agent, hãy chọn Create and use a new service role để Amazon Bedrock sẽ tạo vai trò dịch vụ thay mặt cho bạn.\nTrong phần Select model, hãy chọn Anthropic rồi chọn Claude 3 Sonnet trong menu thả xuống.\nTrong Hướng dẫn cho mô hình, hãy nhập thông tin chi tiết để hướng dẫn mô hình về những việc cần làm và cách tương tác với người dùng. Các hướng dẫn này sẽ được sử dụng trong mẫu nhắc nhở sắp xếp. Sau đây là hướng dẫn sử dụng cho mô hình: You are a personal assistant for a customer support representative. You will help the support representative retrieve customer details including order and support ticket history, and help the representative resolve customer issues. When the representative asks for help solving a customer\u0026#39;s problem, please do your best to find a resolution. When you don\u0026#39;t have enough information, try to resolve it anyway. Don\u0026#39;t suggest opening a ticket. Never say, \u0026#34;Sorry, I don\u0026#39;t have enough information to answer that.\u0026#34; Instead, do your best to come up with a solution. Mở rộng Additional Settings.\nTrong User input, hãy chọn nút radio cho Enabled. Thao tác này sẽ cho phép tác nhân nhắc người dùng cung cấp thêm thông tin. Không thay đổi bất kỳ cài đặt bổ sung nào khác.\nNhấp vào nút Save ở trên cùng trước khi chuyển sang bước tiếp theo. Bạn sẽ nhận được thông báo khi tác nhân được cập nhật thành công. Lưu ý các thông báo để chuẩn bị cho tác nhân trước khi thử nghiệm. Bạn sẽ chuẩn bị cho tác nhân ở bước sau.\nBỏ qua Action groups ngay bây giờ và cuộn xuống Knowledge bases.\nTrong phần Knowledge bases, hãy chọn Add để liên kết cơ sở kiến ​​thức với tác nhân của bạn.\nĐối với Select knowledge base, hãy chọn cơ sở tri thức của bạn từ menu thả xuống. Bạn sẽ thấy cơ sở tri thức hợp nhất mà bạn đã tạo trong phòng thí nghiệm trước đó.\nĐối với Knowledge base instructions for the agent, hãy nhập hướng dẫn để mô tả cách tác nhân nên sử dụng cơ sở tri thức:\nSử dụng cơ sở tri thức này để tìm thông tin về sản phẩm, khách hàng và cách giải quyết các vấn đề của khách hàng. Cơ sở tri thức chứa hướng dẫn sử dụng sản phẩm và phiếu hỗ trợ lịch sử. Nhấp vào Add.\nNhấp vào Save and exit.\nTrong màn hình Agent overview, hãy lưu ý mục nhập bên dưới Agent ARN. Nó sẽ trông giống như ảnh chụp màn hình bên dưới. Đây là ARN được sử dụng để xác định tác nhân của bạn. Sao chép giá trị này cho phần tiếp theo; bạn sẽ cần nó để cấp cho tác nhân này quyền gọi hàm Lambda.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/2-datadiscovery/2.1-managingquicksightassets/",
	"title": "Quản lý QuickSight Assets",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong phần này, chúng tôi sẽ quản lý QuickSight Assets để cho phép người dùng QuickSight truy cập các nguồn dữ liệu đã được tạo. Các nguồn dữ liệu được tạo sẵn này cho phép QuickSight truy cập vào cơ sở dữ liệu nguồn.\nCác bước Điều hướng đến Amazon QuickSight bảng điều khiển.\nVì đây là lần đăng nhập QuickSight ban đầu cho Tài khoản/Người dùng này, vui lòng sử dụng email của bạn:\n\u0026lt;email của bạn\u0026gt; Lưu ý Email bạn nhập trước khi điều hướng đến bước tiếp theo. Email này sẽ được sử dụng sau để chia sẻ tài sản và cập nhật vai trò người dùng QuickSight của bạn.\nNếu mở QuickSight lần đầu tiên, người dùng sẽ thấy hộp thoại What\u0026rsquo;s New in Amazon QuickSight. Nhấp vào Close.\nTruy cập bảng điều khiển quản lý QuickSight, nhấp vào biểu tượng user nằm trên dải băng đen trên cùng bên phải. Nhấp vào Manage QuickSight từ menu thả xuống.\nĐây là bảng điều khiển quản trị viên QuickSight. Từ đây, quản trị viên QuickSight có thể quản lý người dùng, nhóm, tài sản; thiết lập bảo mật tài khoản và quyền để cho phép QuickSight truy cập vào các tài nguyên AWS khác; quản lý tài nguyên cấp mạng.\nNhấp vào Manage assets trên menu bên trái. Đây là nơi chúng ta sẽ cho phép người dùng của mình truy cập vào các nguồn dữ liệu đã được tạo.\nTrong bảng điều khiển Manage assets, nhấp vào Data sources trong phần Browse assets ở dưới cùng.\nHai nguồn dữ liệu chúng ta cần chia sẻ là nguồn dữ liệu ohmzio-database và ampwerks-database. Chia sẻ những mục này bằng cách đánh dấu vào ô bên trái rồi nhấp vào nút SHARE (2).\nTrong trường User or Group, nhập email (participant-d2e2@amazon.com) đã ghi chú ở bước trước. Nhấp vào tên người dùng WSParticipantRole/Participant - Admin để điền vào trường. Nhấp vào SHARE (2). Sau khi chia sẻ thành công các mục, hãy nhấp vào DONE.\nXác minh rằng các nguồn dữ liệu đã được chia sẻ chính xác:\nQuay lại trang đích QuickSight bằng cách nhấp vào biểu tượng QuickSight ở dải băng đen trên cùng bên trái.\nNhấp vào Datasets trong menu bên trái, sau đó nhấp vào New dataset ở góc trên bên phải.\nTrong trang đích Create a Dataset, ở phần dưới cùng FROM EXISTING DATA SOURCES bạn sẽ thấy hai tùy chọn: ohmzio-database và ampwerks-database.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/3-supportknowledgebase/3.1-createknowledgebase/",
	"title": "Tạo Cơ sở tri thức",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong bước này, chúng ta sẽ tạo Amazon Bedrock: Cơ sở tri thức. Cơ sở tri thức sẽ tham chiếu đến nguồn dữ liệu S3 bao gồm dữ liệu hỗ trợ và sản phẩm cho cả Ohmzio và Ampwerks.\nCác bước Điều hướng đến Amazon Bedrock console. Nhấp vào Get Started Nếu xuất hiện cửa sổ bật lên Chào mừng đến với Amazon Bedrock!, hãy nhấp vào Manage model access. Nếu không, hãy chuyển sang bước tiếp theo. Yêu cầu quyền truy cập mô hình: Ở bên trái màn hình, hãy nhấp vào biểu tượng menu để mở menu dịch vụ.\nNhấp vào Model access\nTrong menu Model access, nhấp vào Enable specific models / Modify model access.\nChọn các Base models:\nTitan Text Embeddings V2 Claude 3.5 Sonnet Xin lưu ý rằng một số mô hình cơ sở được liệt kê có thể đã được cấp Quyền truy cập. Điều này sẽ không ảnh hưởng đến khả năng hoàn thành phòng thí nghiệm của bạn. Nếu một mô hình được liệt kê trong bước này đã được cấp, hãy tiếp tục yêu cầu quyền truy cập vào tất cả các mô hình bắt buộc khác.\nNhấp vào Next.\nTrong trang Đánh giá và gửi, nhấp vào Submit. Amazon Bedrock cung cấp trải nghiệm trọn gói cho người dùng. Ví dụ: người dùng có thể tận dụng một số loại mô hình nền tảng trên tất cả các dịch vụ Bedrock. Đổi lại, điều này cung cấp cho người dùng tùy chọn để chọn mô hình nền tảng phù hợp nhất với nhu cầu của họ. Tuy nhiên, các nhà cung cấp mô hình nền tảng (tức là Anthropic, Cohere, Stability AI, v.v.) yêu cầu chấp nhận EULA và các biện pháp bảo vệ hợp lý cho việc sử dụng mô hình trước khi triển khai. Bảng điều khiển Model Access quản lý các thỏa thuận này và cho phép người quản trị thực thi nguyên tắc đặc quyền tối thiểu. Để tìm hiểu thêm về các mô hình nền tảng, hãy tham khảo lại Amazon Bedrock: Cơ sở tri thức các khái niệm chính.\nSau khi yêu cầu quyền truy cập mô hình, Amazon Bedrock sẽ thực hiện \u0026ldquo;công việc nặng nhọc không phân biệt\u0026rdquo; để quản lý quyền truy cập vào các mô hình nền tảng nguồn mở này. Việc cấp quyền truy cập vào các mô hình nền tảng không phải của Amazon có thể mất vài phút. Để xác minh quyền truy cập đã được cấp, hãy nhấp vào nút làm mới bên cạnh Manage model access.\nNhấp vào Knowledge bases trong menu bên trái bên dưới phần Công cụ xây dựng.\nTrong trang đích Knowledge bases, nhấp vào Create knowledge base.\nBước 1, cung cấp thông tin chi tiết về cơ sở kiến ​​thức:\nĐặt tên cho cơ sở kiến ​​thức: merger-knowledge-base Mô tả cơ sở kiến ​​thức: Cơ sở kiến ​​thức cho dữ liệu sản phẩm và hỗ trợ cho cả Ohmzio và Ampwerks. Giữ nguyên quyền IAM và các cấu hình khác theo mặc định.\nNhấp vào Next.\nBước 2, thiết lập nguồn dữ liệu: Đặt tên cho nguồn dữ liệu cơ sở tri thức bằng tên đã cung cấp (nếu không, tên mặc định sẽ được sử dụng): merger-knowledge-base-data-source Nhấp vào Browse S3 để chọn URI S3 của dữ liệu nguồn.\nNhấp vào customerdata-{uniqueId} tên thùng. Nhấp vào nút radio bên cạnh data/ để chọn làm vị trí cho dữ liệu nguồn. Nhấp vào Choose.\nNếu bạn không tìm thấy thùng của mình, hãy đảm bảo rằng bạn đang ở đúng vùng AWS.\nXác minh S3 URI: s3://customerdata-{uniqueId}/data/ Không thay đổi bất kỳ cài đặt nâng cao nào.\nNhấp vào Next.\nBước 3, chọn mô hình nhúng và cấu hình kho vector: Chọn mô hình Titan Text Embeddings V2. Đây là mô hình sẽ được sử dụng để tạo nhúng vector trong kho vector.\nCơ sở dữ liệu vector. Chọn Tạo nhanh kho lưu trữ vector mới - Khuyến nghị. Đây là giá trị mặc định và phải được chọn. Kho lưu trữ vector Amazon OpenSearch Serverless sẽ được tự động tạo cho bạn.\nBỏ chọn các cấu hình tùy chọn.\nNhấp vào Next. Bước 4, Xem lại và tạo: Xem lại cấu hình cơ sở dữ liệu.\nXác minh URI S3 là chính xác:\ns3://customerdata-{uniqueId}/data/ Nhấp vào Create knowledge base.\nĐợi cơ sở dữ liệu được tạo. AWS sẽ chuẩn bị cơ sở dữ liệu vector trong Amazon OpenSearch Serverless. Quá trình này có thể mất tới 10 phút để hoàn tất.\nSau khi cơ sở tri thức được tạo, bạn sẽ thấy một thông báo ở đầu bảng điều khiển của mình:\nNhấp vào Go to data source hoặc cuộn xuống phần Nguồn dữ liệu. Để đồng bộ hóa, hãy nhấp vào nút radio bên cạnh Nguồn dữ liệu mà chúng ta đã tạo (tên phải tương tự như merger-knowledge-base-quick-start-). Nhấp vào Sync. Quá trình này sẽ mất vài phút. Dữ liệu từ thùng S3 của bạn đang được đọc và chia thành \u0026ldquo;chunk\u0026rdquo;. Theo mặc định, Amazon Bedrock sẽ tự động chia dữ liệu nguồn của bạn sao cho mỗi chunk chứa 300 mã thông báo. Mô hình được chọn, Amazon Titan Embeddings V2, được sử dụng để chuyển đổi dữ liệu của bạn thành các nhúng vector cho cơ sở kiến ​​thức.\nKhi quá trình đồng bộ hoàn tất, bạn sẽ nhận được một thông báo khác. "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/",
	"title": "Workshop thứ hai của tôi",
	"tags": [],
	"description": "",
	"content": "AI tạo sinh trong thực tế Mô tả Thông qua một trường hợp sử dụng thực tế hấp dẫn, hãy khám phá cách AI (trí tuệ nhân tạo) tạo sinh có thể định hình lại cách bạn tiếp cận việc giải quyết vấn đề và đổi mới. Workshop này bao gồm các hướng dẫn chi tiết từng bước và tài liệu trình bày mô tả cách sử dụng AI tạo sinh để giải quyết các vấn đề kinh doanh thực tế. Việc thực hành này sẽ mất khoảng 90 phút để hoàn thành.\nNội dung Giới thiệu Các bước chuẩn bị Hỗ trợ kiến thức cốt lõi Tùy chỉnh AI Agent Dọn dẹp tài nguyên "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/4.2-configuringlambdapermissions/",
	"title": "Cấu hình Quyền Lambda",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong phòng thí nghiệm này, bạn sẽ cấu hình quyền để cho phép tác nhân thực hiện chức năng AWS Lambda.\nAWS Lambda là dịch vụ điện toán không máy chủ cực kỳ mạnh mẽ và linh hoạt. Với Lambda, bạn không phải lo lắng về việc cung cấp hoặc quản lý máy chủ. Lambda tự động mở rộng ứng dụng của bạn để đáp ứng lưu lượng truy cập hoặc nhu cầu tăng lên, đảm bảo rằng ứng dụng của bạn có thể xử lý khối lượng công việc mà không cần bất kỳ sự can thiệp thủ công nào.\nBằng cách kết hợp AWS Lambda và Agents for Amazon Bedrock, bạn có thể xây dựng các hệ thống tự động hóa và quy trình làm việc phức tạp, không có máy chủ. Các tác nhân Bedrock có thể được sử dụng để kích hoạt các chức năng Lambda và sau đó các chức năng Lambda có thể sắp xếp một loạt các hành động, chẳng hạn như cập nhật cơ sở dữ liệu, gửi thông báo hoặc gọi các dịch vụ khác.\nTrong phòng thí nghiệm này, chúng ta sẽ sử dụng tác nhân của mình để gọi hàm lambda lấy thông tin khách hàng từ bảng Amazon DynamoDB.\nAmazon DynamoDB là dịch vụ cơ sở dữ liệu mạnh mẽ và có khả năng mở rộng, tự động mở rộng để xử lý bất kỳ lượng dữ liệu và lưu lượng nào mà không cần cung cấp hoặc quản lý máy chủ. Dịch vụ này có thể xử lý tới hàng triệu yêu cầu mỗi giây, với độ trễ nhất quán, một chữ số mili giây.\nĐể tác nhân của bạn sử dụng hàm Lambda, bạn phải đính kèm chính sách dựa trên tài nguyên vào hàm để cấp quyền cho tác nhân.\nCác bước Mở AWS Lambda Functions console . Trong danh sách các hàm, hãy chọn tên hàm BedrockAction. Hàm để truy xuất dữ liệu khách hàng đã được tạo và triển khai trước khi thực hành. Chúng tôi sẽ không thay đổi bất kỳ mã nào, chỉ thiết lập quyền.\nTab Mã được mở theo mặc định. Chọn Configuration.\nTrong menu bên trái, hãy chọn Permissions. Đây phải là mục thứ ba từ trên xuống.\nCuộn xuống Resource-based policy statements.\nNhấp vào Add permissions.\nTrên trang Add permissions, hãy định cấu hình như sau:\nChọn AWS service.\nTrong danh sách thả xuống Service, hãy chọn Other.\nTrong hộp văn bản Statement ID, hãy nhập:\nmy-custom-id-0001 Trong hộp văn bản Principal, hãy nhập:\nbedrock.amazonaws.com Trong hộp văn bản Source ARN, hãy dán Agent ARN mà bạn đã sao chép sau khi tạo agent. Nó sẽ trông giống như sau:\narn:aws:bedrock:us-west-2:123456789012:agent/0ABCDEFGHI Trong danh sách thả xuống Action, hãy chọn lambda:InvokeFunction.\nNhấp vào Save.\nXác minh rằng tuyên bố chính sách dựa trên Tài nguyên Lambda của bạn đã được lưu. "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/2-datadiscovery/",
	"title": "Khai phá dữ liệu",
	"tags": [],
	"description": "",
	"content": "Bối cảnh Là những nhà công nghệ làm việc trong quá trình sáp nhập Ampwerks và Ohmzio gần đây, chúng tôi phải hiểu được trạng thái dữ liệu của từng công ty. Cả cơ sở dữ liệu Ampwerks và Ohmzio đều đã được di chuyển sang tài khoản AWS. Ngoài ra, tài khoản của chúng tôi đã được đăng ký Amazon QuickSight.\nTrong workshop này, chúng tôi sẽ cấu hình Amazon QuickSight để cho phép chúng tôi khám phá dữ liệu từ cơ sở dữ liệu Ampwerks và Ohmzio. Dữ liệu chúng tôi sẽ sử dụng cho workshop này là tập hợp dữ liệu khách hàng, đơn hàng và sản phẩm. Sau đây là lược đồ cho từng cơ sở dữ liệu:\nSơ đồ cơ sở dữ liệu Ohmzio ohmziodb\r├── products\r│ ├── product_id INT NOT NULL\r│ ├── name VARCHAR(100) NOT NULL\r│ ├── category VARCHAR(50) NOT NULL\r│ ├── description VARCHAR(500) NOT NULL\r│ ├── price DECIMAL(10,2) NOT NULL\r│ └── PRIMARY KEY (product_id)\r├── customers\r│ ├── customer_id VARCHAR(20) NOT NULL\r│ ├── phone VARCHAR(20)\r│ ├── name VARCHAR(100)\r│ ├── address VARCHAR(200)\r│ ├── city VARCHAR(100)\r│ ├── state VARCHAR(100)\r│ ├── zip VARCHAR(10)\r│ ├── dob DATE\r│ ├── company VARCHAR(200)\r│ ├── job VARCHAR(100)\r│ ├── email VARCHAR(100)\r│ ├── latitude DECIMAL(9,6)\r│ ├── longitude DECIMAL(9,6)\r│ └── PRIMARY KEY (customer_id)\r├── support_agents\r│ ├── agent_id INT NOT NULL\r│ ├── fname VARCHAR(50) NOT NULL\r│ ├── lname VARCHAR(50) NOT NULL\r│ └── PRIMARY KEY (agent_id)\r├── order_header\r│ ├── order_id VARCHAR(20) NOT NULL\r│ ├── customer_id VARCHAR(20) NOT NULL\r│ ├── order_date DATE NOT NULL\r│ ├── total DECIMAL(10,2) NOT NULL DEFAULT 0\r│ ├── PRIMARY KEY (order_id)\r│ └── FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\r└── order_items\r├── order_id VARCHAR(20) NOT NULL\r├── product_id INT NOT NULL\r├── unit_price DECIMAL(10,2) NOT NULL\r├── qty INT NOT NULL\r├── item_total DECIMAL(10,2) NOT NULL\r├── PRIMARY KEY (order_id, product_id)\r├── FOREIGN KEY (order_id) REFERENCES order_header(order_id)\r└── FOREIGN KEY (product_id) REFERENCES products(product_id) Ampwerks Database Schema ampwerksdb\r├── products\r│ ├── product_id INT PRIMARY KEY\r│ ├── name VARCHAR(255) NOT NULL\r│ ├── type VARCHAR(255) NOT NULL\r│ ├── price DECIMAL(10,2) NOT NULL\r│ ├── voltage VARCHAR(255)\r│ └── connectors VARCHAR(255)\r├── customers\r│ ├── customer_id VARCHAR(20) NOT NULL\r│ ├── phone VARCHAR(20)\r│ ├── name VARCHAR(100)\r│ ├── address VARCHAR(200)\r│ ├── city VARCHAR(100)\r│ ├── state VARCHAR(100)\r│ ├── zip VARCHAR(10)\r│ ├── dob DATE\r│ ├── company VARCHAR(200)\r│ ├── job VARCHAR(100)\r│ ├── email VARCHAR(100)\r│ ├── latitude DECIMAL(9,6)\r│ ├── longitude DECIMAL(9,6)\r│ └── PRIMARY KEY (customer_id)\r├── support_agents\r│ ├── agent_id INT NOT NULL\r│ ├── fname VARCHAR(50) NOT NULL\r│ ├── lname VARCHAR(50) NOT NULL\r│ └── PRIMARY KEY (agent_id)\r├── order_header\r│ ├── order_id VARCHAR(20) NOT NULL\r│ ├── customer_id VARCHAR(20) NOT NULL\r│ ├── order_date DATE NOT NULL\r│ ├── total DECIMAL(10,2) NOT NULL DEFAULT 0\r│ ├── PRIMARY KEY (order_id)\r│ └── FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\r├── order_items\r│ ├── order_id VARCHAR(20) NOT NULL\r│ ├── product_id INT NOT NULL\r│ ├── unit_price DECIMAL(10,2) NOT NULL\r│ ├── qty INT NOT NULL\r│ ├── item_total DECIMAL(10,2) NOT NULL\r│ ├── PRIMARY KEY (order_id, product_id)\r│ ├── FOREIGN KEY (order_id) REFERENCES order_header(order_id)\r│ └── FOREIGN KEY (product_id) REFERENCES products(product_id)\r└── support_tickets\r├── ticket_id VARCHAR(20) NOT NULL\r├── customer_id VARCHAR(20) NOT NULL\r├── product_id INT NOT NULL\r├── agent_id INT NOT NULL\r├── ticket_date DATE NOT NULL\r├── PRIMARY KEY (ticket_id)\r├── FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\r├── FOREIGN KEY (product_id) REFERENCES products(product_id)\r└── FOREIGN KEY (agent_id) REFERENCES support_agents(agent_id) Các bước Đăng nhập vào bảng điều khiển QuickSight Quản lý tài sản nguồn dữ liệu để cho phép truy cập Tạo tập dữ liệu mới cho từng cơ sở dữ liệu bằng công cụ cấu hình dữ liệu trực quan QuickSight Tạo hình ảnh để khám phá thông tin chi tiết ban đầu về khách hàng và sản phẩm cho từng công ty "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/3-supportknowledgebase/3.2-testknowledgebase/",
	"title": "Kiểm tra Cơ sở tri thức",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Bây giờ chúng ta đã tạo ra một cơ sở tri thức sẽ thực hiện RAG trên phiếu hỗ trợ và dữ liệu sản phẩm của chúng ta cho cả Ohmzio và Ampwerks, chúng ta sẽ sử dụng kỹ thuật nhắc nhở để kiểm tra khả năng AI tạo ra dựa trên dữ liệu được cung cấp.\nKỹ thuật nhắc nhở Như đã định nghĩa trong phần giới thiệu, kỹ thuật nhắc nhở là phương pháp thiết kế các lời nhắc hiệu quả hướng dẫn mô hình tạo ra các đầu ra mong muốn. Sau đây là một số biện pháp thực hành tốt nhất cần cân nhắc khi khám phá nguồn dữ liệu với cơ sở tri thức:\nBe specific: Tính cụ thể giúp mô hình hiểu được bối cảnh và đưa ra phản hồi chính xác hơn. Ví dụ, thay vì hỏi \u0026ldquo;cho tôi biết về Bóng đèn thông minh Ohmzio\u0026rdquo;, hãy hỏi \u0026ldquo;Những vấn đề phổ biến nhất với Bóng đèn thông minh Ohmzio là gì?\u0026rdquo;\nUse keywords: Kết hợp các từ khóa có liên quan vào lời nhắc của bạn để báo hiệu ngữ cảnh hoặc miền mà bạn quan tâm. Điều này giúp mô hình điều chỉnh phản hồi của mình theo chủ đề mong muốn.\nStructure prompts: Đối với các truy vấn phức tạp, hãy cấu trúc lời nhắc của bạn theo cách hợp lý, từng bước. Bạn có thể bắt đầu bằng phần giới thiệu ngắn gọn về chủ đề, sau đó là một câu hỏi cụ thể hoặc yêu cầu giải thích.\nIncorporate examples: Khi tìm kiếm đầu ra sáng tạo hoặc phức tạp, việc cung cấp các ví dụ trong lời nhắc của bạn có thể hướng dẫn mô hình đến loại phản hồi mà bạn đang tìm kiếm.\nCác bước Điều hướng đến Amazon Bedrock console.\nNhấp vào Knowledge bases trong menu bên trái bên dưới phần Công cụ xây dựng.\nNhấp vào nút radio bên cạnh merger-knowledge-base mà chúng tôi đã tạo ở phần trước. Sau đó nhấp vào Test knowledge base.\nTrong cửa sổ Test knowledge base, nhấp vào Select model. Trong cửa sổ bật lên, chọn Claude 3 Sonnet và nhấp vào Apply. Trong phòng thí nghiệm trước, bạn đã sử dụng Amazon QuickSight để khám phá ra rằng Smart Plugs có số lượng sự cố hỗ trợ cao nhất. Hãy sử dụng cơ sở kiến ​​thức để khám phá thêm thông tin chi tiết về các sự cố hỗ trợ đó. Trong bảng điều khiển có hộp nhập, hãy sao chép lời nhắc sau và nhấp vào Run: What are the most common issues with Ohmzio Smart Plugs? Đây là một mẫu phản hồi tạo ra:\nLưu ý rằng đầu ra do Cơ sở tri thức tạo ra có thể không khớp chính xác với các mẫu được cung cấp trong hướng dẫn phòng thí nghiệm. Vì quá trình đào tạo, điều chỉnh và cải thiện tổng thể không phân biệt được liên tục cập nhật để cung cấp trải nghiệm hiệu suất cao và đáng tin cậy nhất cho người dùng cuối.\nLưu ý rằng phản hồi trong bảng điều khiển bao gồm các tham chiếu đến chi tiết nguồn. Có thể truy cập chi tiết nguồn bằng cách nhấp vào Show source details ở cuối mỗi phản hồi. Điều này cho phép minh bạch hơn đối với các tuyên bố mà mô hình có thể đưa ra trong một phản hồi nhất định.\nBạn có thể thực hiện những hành động nào để tránh các cuộc gọi hỗ trợ? Sử dụng cơ sở tri thức để có thêm nhiều thông tin chi tiết hơn. How can we update our documentation to avoid some of these unnecessary calls to support? Cơ sở kiến ​​thức chứa hướng dẫn sử dụng sản phẩm và lịch sử phiếu hỗ trợ. Dựa trên thông tin này, LLM đưa ra các hành động có thể thực hiện để cải thiện tài liệu và giảm số lượng cuộc gọi hỗ trợ.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/2-datadiscovery/2.2-creatingquicksightdatasets/",
	"title": "Quản lý bộ dữ liệu QuickSight",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong phần này, chúng tôi sẽ tạo một tập dữ liệu để phân tích các yêu cầu về phiếu yêu cầu của khách hàng nhằm giúp xác định các cơ hội cải tiến sản phẩm bằng cách sử dụng nguồn dữ liệu ohmzio-database. Sau khi kết nối với nguồn dữ liệu mới, Amazon QuickSight sẽ lưu trữ thông tin kết nối. Nó sẽ thêm nguồn dữ liệu vào phần FROM EXISTING DATA SOURCES của trang Create a Dataset. Bạn có thể sử dụng các nguồn dữ liệu hiện có này để tạo các tập dữ liệu mới mà không cần chỉ định lại thông tin kết nối.\nCác bước Điều hướng đến tập dữ liệu mới console . Trong phần FROM EXISTING DATA SOURCES của trang Create a Dataset, chọn ohmzio-database, rồi chọn Create dataset.\nTrên màn hình Choose your table, kết nối với lược đồ ohmziodb từ tùy chọn Schema: include sets of tables và chọn bảng support_tickets từ Tables: contain the data you can visualize.\nĐể chuẩn bị dữ liệu trước khi tạo phân tích, hãy chọn Edit/Preview data để mở chuẩn bị dữ liệu.\nNối bảng support_tickets với bảng customers và products. Các bước cũng được hiển thị trong hình động bên dưới.\nNhấp vào nút Add data nằm ở góc trên bên phải của màn hình.\nChọn Data source từ menu thả xuống.\nChọn ohmzio-database làm nguồn dữ liệu.\nChọn ohmziodb làm lược đồ chứa các bảng.\nNhấp vào hộp kiểm bên cạnh các bảng customers và products.\nNhấp vào nút chọn để chọn cả hai bảng.\nBây giờ bạn sẽ thấy các bảng bổ sung được thêm vào với hai dấu chấm đỏ cho biết các liên kết chưa được định cấu hình. Nhấp vào từng bộ dấu chấm đỏ để truy cập các tùy chọn cấu hình liên kết.\nĐối với khách hàng, hãy điền vào mệnh đề liên kết bằng cách chọn customer_id làm cột liên kết cho cả bảng support_tickets và customers. Chọn loại liên kết được đề xuất là Left và đảm bảo rằng bạn nhấp vào nút Apply để lưu các thay đổi của mình.\nĐối với sản phẩm, hãy điền vào mệnh đề liên kết bằng cách chọn product_id làm cột liên kết cho cả bảng support_tickets và products. Chọn loại liên kết được đề xuất là Left và đảm bảo bạn nhấp vào nút Áp dụng để lưu các thay đổi của mình. Tài sản DataSources Bạn có thể đánh dấu các trường địa lý trong dữ liệu của mình để Amazon QuickSight có thể hiển thị chúng trên bản đồ. Ở phía bên trái của ngăn Fields, hãy tìm các cột địa lý thành phố, tiểu bang, mã bưu chính, vĩ độ và kinh độ.\nNhấp vào nút menu dấu ba chấm ⋮ bên cạnh trường Thành phố. Nhấp vào Change data type và chọn Thành phố trong tiểu mục loại dữ liệu Không gian địa lý. Lặp lại cho các mục sau:\nTrường State sẽ ánh xạ tới kiểu dữ liệu State Geospatial Trường Zip sẽ ánh xạ tới kiểu dữ liệu Postcode Geospatial Trường Latitude sẽ ánh xạ tới kiểu dữ liệu Latitude Geospatial Trường Longitude sẽ ánh xạ tới kiểu dữ liệu Longitude Geospatial Bạn sẽ thấy biểu tượng trường sẽ cập nhật cho từng trường sau khi trường được cập nhật thành kiểu dữ liệu geospatial.\nĐể tên tập dữ liệu của bạn trực quan và dễ hiểu hơn, hãy đổi tên tập dữ liệu từ support_tickets thành customer_support_discovery. Để cập nhật, hãy nhấp vào trường văn bản có tiêu đề hiện tại và cập nhật bằng nội dung sau: customer_support_discovery Nhấp vào Save \u0026amp; Publish (trong dải ruy-băng màu xanh lam trên cùng, bên phải) để lưu các thay đổi của bạn và xuất bản tập dữ liệu.\nQuay lại trang đích QuickSight bằng cách nhấp vào biểu tượng QuickSight trong dải ruy-băng màu đen trên cùng ở bên trái.\nNhấp vào Datasets trong menu bên trái để xem tập dữ liệu đã xuất bản của bạn customer_support_discovery.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/1-introduce/1.1-setup/1.1.2-selfpacedworkshop/",
	"title": "Set up trên tài khoản cá nhân",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Chúng tôi sẽ hướng dẫn từng bước để bắt đầu nếu bạn đang chạy workshop trong tài khoản AWS của riêng mình. Nếu bạn được cung cấp tài khoản AWS, hãy sử dụng hướng dẫn Workshop Studio thay thế.\nThời lượng Workshop này sẽ mất khoảng 2 giờ để hoàn thành tất cả các hoạt động. Nếu workshop này được thực hiện trong Tài khoản AWS do người dùng sở hữu và thanh toán, chúng tôi khuyên bạn nên dành một khoảng thời gian để hoàn thành các hoạt động này trong một phiên duy nhất. Sau khi phiên hoàn tất, hãy đảm bảo làm theo hướng dẫn Cleanup để khởi động lại các dịch vụ và cơ sở hạ tầng AWS được triển khai cho phòng thí nghiệm.\nGiá Ước tính giá để hoàn thành tất cả các hoạt động của workshop: Triển khai mẫu `ds-genai-workshop CloudFormation cần thiết và hoàn thành tất cả các hoạt động theo quy định trong workshop này sẽ phải trả 1,50 đô la - 4,00 đô la một giờ (35-45 đô la một ngày) và 250 đô la một lần. Vui lòng xem chi tiết bên dưới.\nNhư mô tả bên dưới, các dịch vụ và cơ sở hạ tầng AWS cơ bản là cần thiết để có thể tổ chức workshop này. Sau khi cơ sở hạ tầng nền tảng được triển khai, tài khoản của bạn sẽ bắt đầu phải trả phí. Giá của workshop sẽ dao động trong khoảng 1,50 đô la - 4,00 đô la một giờ. Bạn nên dành ra một vài giờ để hoàn thành workshop và giảm chi phí phát sinh cho các tài nguyên nhàn rỗi. Sau khi hoàn tất các phòng thí nghiệm, hãy đảm bảo làm theo hướng dẫn Cleanup i để khởi động các dịch vụ và cơ sở hạ tầng AWS được triển khai cho workshop.\nĐiều kiện tiên quyết Kiến trúc kỹ thuật cho workshop này được thiết kế để làm cho một số hoạt động nhất định có thể truy cập được và ngắn gọn. Để đạt được điều này, một mẫu CloudFormation được cung cấp để triển khai cơ sở hạ tầng cơ sở. Để triển khai mẫu thành công, hãy đảm bảo tất cả các hoạt động và dịch vụ trong phòng thí nghiệm đều có thể truy cập được, các điều kiện tiên quyết sau đây phải được đáp ứng:\nXác minh tính khả dụng của Amazon Bedrock trong Khu vực AWS của bạn Amazon Bedrock và các dịch vụ AWS khác được sử dụng trong workshop này hiện được hỗ trợ tại một số Khu vực AWS nhất định. Khuyến nghị các hoạt động trong phòng thí nghiệm nên được chạy trong us-west-2 (Oregon). Xem Các vùng AWS được hỗ trợ cho Amazon Bedrock để biết thông tin chi tiết về tính khả dụng.\nVPC mặc định hiện có Amazon EC2, Amazon RDS và nhiều dịch vụ khác được triển khai như một phần của cơ sở hạ tầng cơ sở yêu cầu Amazon Virtual Private Cloud hoặc thường được gọi là VPC. VPC là biểu diễn logic của các môi trường mạng ảo trong Tài khoản AWS của bạn. Mỗi Tài khoản AWS ban đầu được cung cấp một VPC \u0026ldquo;Mặc định\u0026rdquo;. Phòng thí nghiệm này giả định rằng VPC \u0026ldquo;Mặc định\u0026rdquo; trong tài khoản tồn tại. Xem bên dưới để biết hướng dẫn về cách kiểm tra VPC mặc định hiện có.\nĐăng ký QuickSight hiện có Amazon QuickSight được sử dụng cho một số hoạt động trong workshop này. Cơ sở hạ tầng cơ sở được triển khai trong mẫu CloudFormation được thiết kế để tạo đăng ký QuickSight mới cho người dùng nếu chưa có. Nếu bạn không chắc chắn tài khoản của mình có đăng ký QuickSight hiện tại hay không, hãy xem hướng dẫn bên dưới về cách kiểm tra đăng ký QuickSight hiện tại.\nKiểm tra VPC mặc định hiện tại Như đã đề cập ở trên, mẫu CloudFormation triển khai cơ sở hạ tầng cơ sở dựa trên VPC \u0026ldquo;Mặc định\u0026rdquo; hiện có trong Tài khoản AWS đang được sử dụng. VPC \u0026ldquo;Mặc định\u0026rdquo; được cung cấp cho tất cả Tài khoản AWS khi tạo cho tất cả Vùng AWS. Để xác minh VPC mặc định hiện có trong Tài khoản AWS cho các vùng mong muốn, hãy làm theo các bước sau:\nĐiều hướng đến Bảng điều khiển VPC AWS\nTrong menu bên phải, bên dưới phần Đám mây riêng ảo, hãy nhấp vào Your VPCs.\nĐây là danh sách tất cả VPC hiện có trong tài khoản cho vùng đã chỉ định. Từ bảng điều khiển này, người dùng có thể quản lý cấu hình mạng, bảo mật và các dịch vụ khác từ bảng điều khiển VPC.\nTrong danh sách, hãy kiểm tra xem có VPC nào có tên là Default không. Nếu có VPC có tên là Default trong danh sách này, tài khoản có cơ sở hạ tầng cần thiết để triển khai thành công. Nếu VPC mặc định không tồn tại, hãy kiểm tra trong một tài khoản khác "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/3-supportknowledgebase/",
	"title": "Cơ sở tri thức về sản phẩm và hỗ trợ",
	"tags": [],
	"description": "",
	"content": "Bối cảnh Sau khi khám phá ra những phát hiện ban đầu quan trọng trong dữ liệu bằng cách sử dụng phân tích mô tả trong QuickSight, hãy tận dụng các khả năng AI tạo ra để tăng cường quy trình khám phá dữ liệu. Để đảm bảo quá trình chuyển đổi diễn ra suôn sẻ trong quá trình hợp nhất, việc hiểu được những điểm khó khăn mà khách hàng gặp phải với các sản phẩm là điều tối quan trọng. Chúng tôi sẽ sử dụng kết hợp các dịch vụ AI tạo ra của AWS và các phương pháp hay nhất về Prompt Engineering để tạo ra đầu ra.\nPrompt Engineering Prompt Engineering là một kỹ thuật được sử dụng trong lĩnh vực trí tuệ nhân tạo (AI), đặc biệt là với các mô hình AI tạo ra như Mô hình ngôn ngữ lớn (LLM), để tạo ra các đầu vào (lời nhắc) hướng dẫn mô hình tạo ra đầu ra mong muốn. Nó bao gồm việc thiết kế, tinh chỉnh và thử nghiệm các lời nhắc để truyền đạt hiệu quả nhiệm vụ hoặc câu hỏi cho mô hình theo cách tối đa hóa khả năng nhận được phản hồi chính xác, có liên quan và mạch lạc.\nBằng cách áp dụng các phương pháp hay nhất trong các lời nhắc kỹ thuật được sử dụng trong cơ sở kiến ​​thức, chúng ta có thể nhận được các đầu ra có giá trị cao tối ưu. Ngoài ra, Prompt Engineering hiệu quả đòi hỏi phải hiểu dữ liệu đào tạo, khả năng và hạn chế của mô hình. Lời nhắc phải đủ cụ thể để gợi ra phản hồi mong muốn nhưng đủ linh hoạt để cho phép mô hình tạo ra các đầu ra sáng tạo hoặc sâu sắc.\nDữ liệu sản phẩm và hỗ trợ Bạn đã được cung cấp dữ liệu sản phẩm và hỗ trợ cho cả Ohmzio và Ampwerks. Dữ liệu hiện được lưu trữ trong Amazon S3 Bucket.\ns3://customerdata\r└── data/\r├── ampwerks/\r│ ├── productinfo/\r│ │ └── \u0026lt;product-documentation\u0026gt;.docx\r│ └── support/\r│ └── \u0026lt;support-tickets\u0026gt;.json\r└── ohmzio/\r├── productinfo/\r│ └── \u0026lt;product-documentation\u0026gt;.docx\r└── support/\r└── \u0026lt;support-tickets\u0026gt;.json Đối với mỗi công ty, thư mục productinfo/ chứa các tệp .docx cho từng sản phẩm mà họ bán. Mỗi tài liệu chứa các mô tả toàn diện về sản phẩm, hướng dẫn và Câu hỏi thường gặp.\nThư mục support/ chứa các tệp .json cho mọi phiếu hỗ trợ khách hàng. Các phiếu hỗ trợ này chứa các tương tác giữa đại diện hỗ trợ và khách hàng yêu cầu hỗ trợ về sản phẩm họ đã mua.\nDữ liệu productinfo/ và support/ sẽ cung cấp dữ liệu ngữ cảnh có liên quan cao cho mô hình nền tảng. Điều này sẽ cho phép mô hình cung cấp phản hồi dựa trên các tương tác thực tế và giảm dữ liệu sai sự thật.\nDữ liệu sai sự thật: (liên quan đến trí tuệ nhân tạo) là phản hồi do AI tạo ra có chứa thông tin sai lệch hoặc gây hiểu lầm được trình bày dưới dạng sự thật.\nAmazon Bedrock: Cơ sở kiến ​​thức Để tăng cường các nỗ lực khám phá, bạn sẽ sử dụng Amazon Bedrock: Cơ sở kiến ​​thức để tạo nguồn dữ liệu được chỉ định cao (dữ liệu sản phẩm và hỗ trợ cho cả hai công ty) để thực hiện Tạo thế hệ tăng cường truy xuất (RAG) với Mô hình nền tảng (FM) trên nguồn dữ liệu mà chúng tôi xác định. Sau đây là kiến ​​trúc logic của kiến ​​trúc RAG sử dụng Cơ sở tri thức và các khái niệm chính:\nRetrieval Augmented Generation (RAG) là một phương pháp luận trong trí tuệ nhân tạo kết hợp khả năng của hai thành phần chính: hệ thống truy xuất và mô hình tạo. Phương pháp này đặc biệt được sử dụng trong bối cảnh các tác vụ xử lý ngôn ngữ tự nhiên (NLP), chẳng hạn như trả lời câu hỏi, tạo nội dung và hệ thống hội thoại. Mục tiêu của RAG là nâng cao chất lượng, tính liên quan và độ chính xác của đầu ra của mô hình tạo bằng cách kết hợp động kiến ​​thức bên ngoài được thu thập theo thời gian thực.\nMô hình ngôn ngữ lớn (LLM) là một mô hình học sâu rất lớn được đào tạo trước trên một lượng lớn dữ liệu. Bộ chuyển đổi cơ bản là một tập hợp các mạng nơ-ron bao gồm bộ mã hóa và bộ giải mã có khả năng tự chú ý. Bộ mã hóa và bộ giải mã trích xuất ý nghĩa từ một chuỗi văn bản và hiểu mối quan hệ giữa các từ và cụm từ trong đó. Điều này cho phép LLM trở nên cực kỳ linh hoạt. Một mô hình có thể thực hiện các nhiệm vụ hoàn toàn khác nhau như trả lời câu hỏi, tóm tắt tài liệu, dịch ngôn ngữ và hoàn thành câu.\nMô hình nền tảng (FM) rộng hơn và bao gồm không chỉ các mô hình ngôn ngữ mà còn bất kỳ loại mô hình học sâu nào được đào tạo trước trên một tập dữ liệu lớn và có thể được tinh chỉnh cho nhiều nhiệm vụ khác nhau. Khái niệm này mở rộng ra ngoài văn bản để bao gồm các mô hình được đào tạo trên hình ảnh, âm thanh, v.v.\nVector Store trong bối cảnh AI tạo sinh đề cập đến cơ sở dữ liệu hoặc hệ thống lưu trữ chứa các vectơ có chiều cao, là biểu diễn của các mục dữ liệu (như văn bản, hình ảnh hoặc âm thanh) ở dạng mà máy có thể xử lý và hiểu hiệu quả. Các vectơ này thường được tạo thông qua quá trình nhúng, trong đó các mục dữ liệu được chuyển đổi thành các vectơ có kích thước cố định, nắm bắt các thuộc tính ngữ nghĩa và mối quan hệ của dữ liệu gốc trong không gian vectơ liên tục.\nKhi được sử dụng với RAG, mô hình AI tạo sinh có thể truy vấn kho vectơ để truy xuất thông tin có liên quan dựa trên truy vấn đầu vào. Thông tin này sau đó có thể được sử dụng để tạo ra các phản hồi vừa có liên quan vừa được thông báo bằng dữ liệu cập nhật hoặc cụ thể.\nCác bước Tạo Amazon Bedrock: Cơ sở kiến ​​thức Kiểm tra cơ sở kiến ​​thức Sử dụng kỹ thuật nhanh để trích xuất dữ liệu về sản phẩm và dịch vụ "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/3-supportknowledgebase/3.3-conclusion/",
	"title": "Kết luận",
	"tags": [],
	"description": "",
	"content": "Xin chúc mừng! Bạn vừa hoàn tất việc thiết lập Cơ sở tri thức về Sản phẩm và Hỗ trợ!\nTóm tắt Trong phòng thí nghiệm này, bạn:\nĐã học những điều cơ bản về Retrieval-Augmented Generagion (RAG) và kỹ thuật nhắc nhở.\nĐã tạo Cơ sở tri thức Amazon Bedrock.\nĐã triển khai Vector Engine cho Amazon OpenSearch Serverless\nĐã sử dụng Amazon Titan để tạo nhúng vector.\nĐã kiểm tra cơ sở tri thức bằng cách tương tác với Mô hình ngôn ngữ lớn (LLM). Các bước tiếp theo Khi bạn đã tạo cơ sở tri thức, kho vector OpenSearch Serverless đã được tạo.\nKhám phá bộ sưu tập để theo dõi hiệu suất. Bộ sưu tập OpenSearch Serverless\nHọc tập bổ sung Retrieval-Augmented Generagion\nCơ sở kiến ​​thức cho Amazon Bedrock\nVector Engine cho Amazon OpenSearch Serverless\nAmazon Titan Text Embeddings\nMở khóa giá trị của AI tạo sinh cho doanh nghiệp Các nhà lãnh đạo\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/4.3-addingactiongroup/",
	"title": "Thêm Action Group",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Có thể định nghĩa nhóm hành động để chuyên môn hóa thêm chức năng của tác nhân, cho phép tác nhân thực hiện các hành động hoặc quy trình cụ thể. Các hành động cũng có thể truy xuất thông tin bổ sung, cung cấp cho tác nhân kiến ​​thức và khả năng bổ sung cần thiết để tạo ra các phản hồi có liên quan và mạch lạc.\nCác bước Quay lại Amazon Bedrock Agents console của bạn.\nChọn tác nhân của bạn từ danh sách.\nChọn Edit in Agent Builder.\nCuộn xuống Action groups.\nBedrock có thể đã tạo một nhóm hành động mặc định (\u0026ldquo;UserInputAction\u0026rdquo;) cho bạn. Nếu vậy, hãy nhấp vào nhóm hành động UserInputAction và làm theo các bước bên dưới để chỉnh sửa nhóm đó. Nếu bạn không có nhóm hành động nào hiện có, hãy nhấp vào Thêm để tạo nhóm mới.\nNhấp vào Add.\nTrên trang Tạo (hoặc Chỉnh sửa) nhóm hành động, hãy hoàn thành các bước sau:\nSee screenshot below\nEnter action group name: agent-action-group Description: Actions taken for the agent. Đối với Action group type, hãy chọn Define with function details.\nĐối với Action group invocation, hãy chọn Select an existing Lambda function.\nĐối với Select Lambda function, hãy chọn BedrockAction và phiên bản $LATEST.\nThêm hàm nhóm hành động.\nNhập thông tin chi tiết cho Action group function 1. Name: GetCustomerDetails Description: Retrieve customer by customer id and return the customer details, order history, and support history. Xác nhận phải bị Disabled.\nThêm tham số (parameter)\nNhấp vào dấu kiểm sau khi chỉnh sửa từng thuộc tính tham số.\nTên: cust_id Mô tả:\nThe ID of the customer. Loại\nString Bắt buộc\nTrue Nhấp vào Save and exit. Xác minh rằng nhóm hành động đã được tạo. Cuộn lại đầu trang và nhấp vào Lưu và thoát.\nXác minh rằng tác nhân đã được cập nhật. Tác nhân đã được cập nhật\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/",
	"title": "Customer AI Agent",
	"tags": [],
	"description": "",
	"content": "Bối cảnh Bộ phận CNTT Ohmzio-Ampwerks mới đã làm việc để hợp nhất các cơ sở dữ liệu khách hàng thành một chế độ xem hợp nhất duy nhất về khách hàng. Họ đã trích xuất thông tin khách hàng từ cả hai cơ sở dữ liệu và họ đã tận dụng sức mạnh của AWS Entity Resolution để khớp với khách hàng và chỉ định một mã định danh khách hàng duy nhất. Thông tin khách hàng hợp nhất kết quả đã được lưu trữ trong Amazon DynamoDB để truy xuất nhanh từ ứng dụng của chúng tôi.\nMục tiêu Agents for Amazon Bedrock có thể hỗ trợ nhiều tác vụ khác nhau. Ví dụ: bạn có thể tạo một đại lý giúp khách hàng xử lý yêu cầu bồi thường bảo hiểm hoặc một đại lý giúp khách hàng đặt chỗ du lịch. Hôm nay, bạn sẽ cấu hình một tác nhân để giúp nhóm hỗ trợ cung cấp trải nghiệm khách hàng tốt hơn.\nPhòng thí nghiệm này hướng dẫn bạn quy trình sử dụng Agents for Amazon Bedrock để thêm nhiều khả năng hơn vào ứng dụng AI đàm thoại của bạn. Sử dụng các tác nhân, bạn sẽ điều chỉnh hành vi của ứng dụng bằng cách cung cấp các hướng dẫn cụ thể cho tác nhân. Bạn cũng sẽ cấu hình tác nhân của mình để lấy thông tin khách hàng nhằm hỗ trợ thêm cho các trường hợp hỗ trợ.\nCác bước thực hiện\nTạo một tác nhân cho Amazon Bedrock. Thêm nhóm hành động vào tác nhân. Kiểm tra tác nhân và xem thông tin theo dõi. Một tác nhân bao gồm các thành phần sau:\nMô hình nền tảng. Bạn chọn một mô hình nền tảng (FM) mà tác nhân gọi để diễn giải thông tin đầu vào của người dùng và các lời nhắc tiếp theo trong quy trình điều phối của mình. Tác nhân cũng gọi FM để tạo phản hồi và các bước tiếp theo trong quy trình của mình.\nHướng dẫn. Bạn viết các hướng dẫn mô tả những gì tác nhân được thiết kế để thực hiện. Với các lời nhắc nâng cao, bạn có thể tùy chỉnh thêm các hướng dẫn cho tác nhân ở mọi bước.\nNhóm hành động. Bạn xác định các hành động mà tác nhân phải thực hiện thông qua việc cung cấp các tài nguyên sau:\nMột lược đồ OpenAPI để xác định các hoạt động API mà tác nhân có thể gọi để thực hiện các tác vụ của mình. Một hàm Lambda mà tác nhân có thể thực thi. Cơ sở kiến ​​thức. Liên kết cơ sở kiến ​​thức với một tác nhân. Tác nhân truy vấn cơ sở kiến ​​thức để biết thêm ngữ cảnh nhằm tăng cường tạo phản hồi và nhập vào các bước của quy trình phối hợp.\nMẫu nhắc nhở. Mẫu nhắc nhở là cơ sở để tạo lời nhắc cung cấp cho FM. Agents for Amazon Bedrock cung cấp bốn mẫu lời nhắc cơ sở mặc định có thể chỉnh sửa để tùy chỉnh hành vi của tác nhân.\nKiến trúc tác nhân có thể tùy chỉnh và mở rộng này cho phép người dùng tạo trợ lý thông minh phù hợp với nhu cầu và yêu cầu riêng của họ.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/4.4-testingbedrockagent/",
	"title": "Kiểm tra Bedrock Agent",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Sau khi tạo một agent, bạn sẽ có một bản nháp đang hoạt động mà bạn có thể sử dụng để xây dựng agent của mình theo từng bước. Mỗi lần bạn thực hiện thay đổi đối với agent của mình, bản nháp đang hoạt động sẽ được cập nhật.\nKhi quá trình xây dựng agent hoàn tất, bạn có thể tạo một phiên bản và một bí danh. Sau đó, bạn có thể triển khai agent của mình cho các ứng dụng của mình bằng cách gọi bí danh.\nKiểm tra bản nháp đang hoạt động của bạn Trong bảng điều khiển Amazon Bedrock, bạn mở một cửa sổ kiểm tra và cung cấp thông tin đầu vào để tạo phản hồi của agent.\nĐể giúp khắc phục sự cố về hành vi của agent, Agents for Amazon Bedrock cung cấp khả năng xem dấu vết trong phiên làm việc với agent của bạn. Dấu vết hiển thị quy trình suy luận từng bước của agent.\nCác bước Trong hoạt động trước, bạn đã thêm nhóm hành động cho tác nhân của mình và bạn vẫn phải ở trên trang chi tiết tác nhân. Nếu không, hãy quay lại Amazon Bedrock Agents console và chọn tác nhân của bạn từ danh sách.\nCửa sổ Kiểm tra phải nằm trong ngăn bên phải. Nếu cửa sổ Kiểm tra đã đóng, bạn có thể mở lại bằng cách chọn Kiểm tra ở đầu trang chi tiết tác nhân.\nTrước khi kiểm tra tác nhân, bạn phải chuẩn bị tác nhân. Trong cửa sổ Kiểm tra, hãy chọn Prepare.\nMỗi lần cập nhật bản nháp đang hoạt động, bạn phải chuẩn bị tác nhân để đóng gói tác nhân với những thay đổi mới nhất của mình. Theo phương pháp hay nhất, chúng tôi khuyên bạn luôn kiểm tra Thời gian chuẩn bị cuối cùng của tác nhân trong phần Tổng quan về tác nhân của trang Bản nháp đang hoạt động để xác minh rằng bạn đang thử nghiệm tác nhân của mình bằng các cấu hình mới nhất.\nĐể thử nghiệm tác nhân, hãy nhập tin nhắn và chọn Chạy. Chúng ta hãy bắt đầu bằng một lời chào đơn giản: Hi Trong khi bạn chờ phản hồi được tạo hoặc sau khi phản hồi được tạo, hãy chọn Show trace. Dấu vết hiển thị thông tin chi tiết cho từng bước trong quy trình phối hợp của tác nhân, bao gồm lời nhắc, cấu hình suy luận và quy trình lý luận của tác nhân cho từng bước và cách sử dụng các nhóm hành động và cơ sở kiến ​​thức của tác nhân đó.\nTrong tab Orchestration and knowledge base, hãy mở rộng Trace Step 1 và cuộn xuống. Lưu ý ngữ cảnh bổ sung được cung cấp và cách lời nhắc được thiết kế để tạo ra phản hồi tốt nhất từ ​​mô hình. Khi được cung cấp lời chào đơn giản, nhân viên sẽ trả lời người dùng bằng lời chào đơn giản.\nYêu cầu nhân viên tìm thông tin về khách hàng bằng ID khách hàng. What can you tell me about customer 274877906944? Khi nhân viên đang làm việc, hãy nhấp vào Show trace một lần nữa để xem dữ liệu theo dõi mới.\nTrong Orchestration and knowledge base, Trace Step 2, hãy lưu ý cách nhân viên quyết định gọi hàm.\nTrong phản hồi cuối cùng, bạn sẽ thấy thông tin chi tiết về khách hàng này, bao gồm các sản phẩm đã mua và phiếu hỗ trợ từ cả Ampwerks và Ohmzio. Hãy nhớ rằng, đầu ra của bạn có thể trông khác nhau tùy thuộc vào sự khác biệt trong các mô hình ngôn ngữ lớn. 7. Yêu cầu thêm thông tin để giúp khách hàng giải quyết vấn đề.\nKhách hàng đang gặp nhiều vấn đề hơn với Smart Pet Feeder.\rMáy cho ăn thông minh đang phân phối lượng thức ăn không nhất quán. Nhấp vào Show trace một lần nữa để xem dữ liệu theo dõi mới.\nLưu ý cách nhân viên sử dụng thông tin khách hàng cũng như các phiếu hỗ trợ liên quan từ cơ sở kiến ​​thức để tạo phản hồi.\nNgoài ra, hãy lưu ý [1] trong phản hồi. Nhấp vào chú thích để hiển thị tài liệu cơ sở kiến ​​thức được sử dụng để tìm câu trả lời. Trong trường hợp này, nhân viên có thể tìm thấy thông tin có liên quan từ các phiếu hỗ trợ Ohmzio trước đây.\nTiếp tục hộp thoại. The customer checked the chute and there are no jams. What else could it be? Nhân viên phản hồi bằng các mẹo khắc phục sự cố bổ sung, bao gồm gợi ý hiệu chuẩn lại. Bạn có thể phản hồi bằng cách yêu cầu thêm hướng dẫn.\nHow do I recalibrate the smart feeder? The recalibration worked. The feeder is now dispensing the correct amount of food. Thử nghiệm bằng cách đặt thêm một vài câu hỏi. Để bắt đầu cuộc trò chuyện mới, hãy sử dụng các ID khách hàng bổ sung có thể tìm thấy trong bảng DynamoDB. Sau đây là một số cách để thử: 292057776128\r412316860425\r120259084303 "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/2-datadiscovery/2.4-conclusion/",
	"title": "Tổng kết",
	"tags": [],
	"description": "",
	"content": "Xin chúc mừng! Bạn vừa hoàn thành phần Khai phá dữ liệu.\nTóm tắt Trong phần thực hành này, bạn đã:\nCấu hình Amazon QuickSight và chia sẻ hai nguồn dữ liệu, cho phép truy vấn trực tiếp các cơ sở dữ liệu Amazon Aurora.\nTạo các tập dữ liệu Amazon QuickSight, kết nối nhiều bảng nguồn.\nXây dựng bảng điều khiển Amazon QuickSight để hiểu các vấn đề của khách hàng.\nCác bước tiếp theo Bây giờ bạn đã tạo bảng điều khiển cho Ohmzio, hãy kiểm tra kiến ​​thức về QuickSight của mình bằng cách tạo bảng điều khiển cho Ampwerks. Khám phá các hình ảnh trực quan khác nhau để hiểu rõ hơn về dữ liệu. Sản phẩm Ampwerks nào chịu trách nhiệm cho nhiều phiếu hỗ trợ nhất?\nĐể tìm cảm hứng, hãy xem Amazon QuickSight Gallery\nHọc tập bổ sung QuickSight Demo Central cho phép bạn trải nghiệm các bảng thông tin QuickSight khác. Khám phá các tính năng mới và tìm hiểu các mẹo và thủ thuật.\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/5-cleanup/",
	"title": "Dọn dẹp",
	"tags": [],
	"description": "",
	"content": "Hướng dẫn Nếu workshop này được chạy trong tài khoản không do AWS cung cấp, hãy làm theo các bước sau để xóa tài nguyên trên tài khoản cá nhân của bạn.\nXóa Bedrock Agent và Action Groups được tạo trong 4.1 Tạo Bedrock Agent. Xóa Bedrock Knowledge Base được tạo trong 3.1 Tạo Knowledge Base. Xóa dữ liệu mẫu hội thảo \u0026ndash; (Tùy chọn) Điều hướng đến Bảng điều khiển S3 và xóa thùng được tạo bởi mẫu hội thảo. Tên của bucket sẽ là customerdata-. Nếu muốn giữ nguyên dữ liệu nguồn, bạn có thể bỏ qua bước này. Nếu bỏ qua bước này, bucket S3 chứa tất cả dữ liệu mẫu sẽ vẫn nằm trong tài khoản. Điều này sẽ tích lũy thêm ~24 MB dung lượng lưu trữ vào chi phí lưu trữ S3 hiện có.\nXóa cơ sở hạ tầng cơ sở \u0026ndash; Điều hướng đến CloudFormation và xóa ngăn xếp ds-genai-workshop đã triển khai cho workshop. "
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/4-customeraiagent/4.5-conclusion/",
	"title": "Kết luận",
	"tags": [],
	"description": "",
	"content": "Xin chúc mừng! Bạn vừa hoàn tất việc thiết lập Agent cho Amazon Bedrock!\nTóm tắt Trong phòng thí nghiệm này, bạn:\nTạo một agent cho Amazon Bedrock. Cung cấp hướng dẫn và cấu hình agent để sử dụng cơ sở kiến ​​thức của bạn. Thêm một nhóm hành động vào agent. Cấu hình một hàm lambda để gọi từ agent của bạn. Kiểm tra agent và phân tích thông tin theo dõi. Các bước tiếp theo Để khám phá thêm dữ liệu khách hàng để sử dụng làm đầu vào của agent, bạn có thể duyệt trực tiếp bảng Amazon DynamoDB. Sử dụng liên kết này để duyệt bảng tất cả khách hàng .\nTrong phòng thí nghiệm, bạn đã định cấu hình một nhóm hành động để gọi hàm Lamdba. Hàm lamba mẫu đã truy xuất thông tin khách hàng bổ sung từ Amazon DynamoDB và trả về cho tác nhân để có thêm ngữ cảnh cụ thể cho khách hàng.\nAmazon Bedrock Agents trao quyền cho bạn xây dựng các tác nhân tự chủ có thể thực hiện các tác vụ thay mặt bạn. Các tác nhân tự động gọi các API cần thiết để giao dịch với hệ thống và quy trình của bạn để thực hiện yêu cầu, đồng thời xác định xem chúng có thể tiếp tục hay cần thu thập thêm thông tin hay không.\nBạn có thể sử dụng Agents để tự động hóa các tác vụ trong tổ chức của mình như thế nào?\nHọc tập bổ sung Thế hệ tăng cường truy xuất là gì?\nAgents for Amazon Bedrock\nCách thức hoạt động của Agents for Amazon Bedrock\n"
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dinhlam310.github.io/workshop2.github.io/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]